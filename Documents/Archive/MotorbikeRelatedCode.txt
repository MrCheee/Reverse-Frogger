** LaneChangeSkillManager **

private bool CheckIfLaneChangeIsBlocked(GridCoord currentGrid, GridCoord moveGrid)
    {
        GridCoord nextGrid = Helper.AddGridCoords(currentGrid, moveGrid);

        bool isDivider = FieldGrid.GetDividerLaneNum() == nextGrid.y;
        bool isSidewalk = FieldGrid.GetBottomSidewalkLaneNum() == nextGrid.y || FieldGrid.GetTopSidewalkLaneNum() == nextGrid.y;
        bool vehicleInGrid = Helper.IsVehicleInTheWay(nextGrid);
        bool enemyInGrid = Helper.IsEnemyInTheWay(nextGrid);
        bool blockedBecauseOfMotorbike = false;
        if (m_Skill.unit.GetName() != "Motorbike")
        {
            blockedBecauseOfMotorbike = CheckIfMotorbikeIsInbetweenLane(currentGrid, moveGrid);
        }
        else
        {
            blockedBecauseOfMotorbike = CheckIfMotorbikeIsBlockedByVehicleInItsLane(currentGrid, moveGrid);
        }

        if (isDivider) Debug.Log("Lane Change Blocked by divider!");
        if (isSidewalk) Debug.Log("Lane Change Blocked by sidewalk!");
        if (vehicleInGrid) Debug.Log("Lane Change Blocked by vehicle in the way!");
        if (enemyInGrid) Debug.Log("Lane Change Blocked by enemy in the way!");
        if (blockedBecauseOfMotorbike) Debug.Log("Lane Change Blocked by motorbike in the way!");

        return isDivider || isSidewalk || vehicleInGrid || enemyInGrid || blockedBecauseOfMotorbike;
    }

    private bool CheckIfMotorbikeIsInbetweenLane(GridCoord currentGrid, GridCoord moveGrid)
    {
        GridCoord nextGrid = Helper.AddGridCoords(currentGrid, moveGrid);
        int currentY = currentGrid.y;
        bool motorbikeInTheWay = false;

        // If moving upwards
        if (moveGrid.y == 1)
        {
            // Check its current grid for motorbike in its position, if there is, it should be blocking
            motorbikeInTheWay = FieldGrid.GetSingleGrid(currentGrid).GetListOfUnitsName().Contains("Motorbike");

            // If it is moving into the topmost lane (within each set of lanes), check if motorbike is in the next grid
            if (currentY == FieldGrid.GetDividerLaneNum() - 2 || currentY == FieldGrid.GetTopSidewalkLaneNum() - 2)
            {
                bool motorbikeInNextGrid = FieldGrid.GetSingleGrid(nextGrid).GetListOfUnitsName().Contains("Motorbike");
                motorbikeInTheWay = motorbikeInTheWay && motorbikeInNextGrid;
            }
        }
        else  // If moving downwards
        {
            // Check its next grid downwards for motorbike in its position, if there is, it should be blocking
            motorbikeInTheWay = FieldGrid.GetSingleGrid(nextGrid).GetListOfUnitsName().Contains("Motorbike");

            // If it is moving out from the topmost lane (within each set of lanes), check if motorbike is in the current grid
            if (currentY == FieldGrid.GetDividerLaneNum() - 1 || currentY == FieldGrid.GetTopSidewalkLaneNum() - 1)
            {
                bool motorbikeInNextGrid = FieldGrid.GetSingleGrid(currentGrid).GetListOfUnitsName().Contains("Motorbike");
                motorbikeInTheWay = motorbikeInTheWay && motorbikeInNextGrid;
            }
        }

        return motorbikeInTheWay;
    }

    private bool CheckIfMotorbikeIsBlockedByVehicleInItsLane(GridCoord currentGrid, GridCoord moveGrid)
    {
        // When moving up, it can only be blocked by a motorbike that is inbetween lane
        if (moveGrid.y == 1)
        {
            // TO BE IMPLEMENTED
            return false;
        }
        else  // Motorbike will be blocked from moving down if another vehicle is in its same grid 
        {
            var vehiclesInCurrentGrid = FieldGrid.GetSingleGrid(currentGrid).GetListOfUnitsWithGameObjectTag("Vehicle");
            var vehicleTags = vehiclesInCurrentGrid.Select(x => x.GetName());
            int numberOfMotorbikes = vehicleTags.Count(x => x == "Motorbike");
            int numberOfNonMotorbikes = vehicleTags.Count() - numberOfMotorbikes;

            // If there is another vehicle in the grid, then blocked
            if (numberOfNonMotorbikes > 0)
            {
                return true;
            }
            else if (numberOfMotorbikes >= 2) // If there is another motorbike in the grid, and no other vehicle, then blocked
            {
                return true;
            }
            else
            {
                return false;
            }
        }
    }